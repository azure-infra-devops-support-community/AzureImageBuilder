trigger: none

schedules:
  - cron: "0 8 14 * *"
    displayName: Monthly build
    branches:
     include:
     - main 
    always: true

parameters:
- name: mode
  type: string
  default: stable
  values:
    - beta
    - stable
- name: image
  type: string
  default: windows2019
  values:
    - win-2019
    - ubuntu-pro-2204

name: $(Year:yyyy).$(Month).$(Rev:r)

variables:
  - name: imageTemplateName
    value: sbs-uks-$(environment)-${{ parameters.image }}-it
  - name: fileToRun
    value: images/${{ parameters.image }}.bicep
  - name: version
    value: '$(Build.BuildNumber)'

  - ${{ if eq(parameters.mode, 'beta') }}:
    - name: environment
      value: np01
    - name: agentPool
      value: sbs-uks-np-srd-services-vmss
    - name: subscriptionId
      value: 892aac0b-37f6-4b3a-8223-95a1f68bd5b1
    - name: serviceConnection
      value: sbs-np-srd-cmnsvc-product-sp

  - ${{ if eq(parameters.mode, 'stable') }}:
    - name: environment
      value: pr01
    - name: agentPool
      value: sbs-uks-np-srd-services-vmss
    - name: subscriptionId
      value: 6b87b5c9-7b49-48b2-b68e-f41ae7c6d38d
    - name: serviceConnection
      value: sbs-pr-srd-cmnsvc-product-sp

resources:
  repositories:
    - repository: PipelineTemplates
      type: git
      name: Skipton/Infrastructure.Platform.Templates
      ref: refs/tags/v2.0.16

stages:
  - template: stages/bicep_build.yml@PipelineTemplates
    parameters:
      stageName: Build
      agentPool: $(agentPool)
      contentsPath: infra/
      fileToRun: $(fileToRun)

  - stage: Clean
    displayName: 'Cleanup'
    dependsOn: Build
    pool: $(agentPool)
    jobs:
    - job: Clean
      steps:
      - task: AzurePowerShell@5
        retryCountOnTaskFailure: 10
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: "InlineScript"
          azurePowerShellVersion : LatestVersion
          preferredAzurePowerShellVersion:
          pwsh: false
          Inline: |
            Write-Host '${{ parameters.image }}'
            Install-Module -Name Az.ImageBuilder -Repository PSGallery -AllowClobber -Force

            Import-Module -Name Az.ImageBuilder
          
            $subnet = 'imagebuilder-sn'

            $net = @{
                Name = 'sbs-uks-${{ variables.environment }}-cmnsvc-lan-vnet'
                ResourceGroupName = 'sbs-uks-${{ variables.environment }}-cmnsvc-network-rg'
                }

            $vnet = Get-AzVirtualNetwork @net

            ($vnet | Select -ExpandProperty subnets | Where-Object {$_.Name -eq $subnet}).privateLinkServiceNetworkPolicies = "Disabled"

            $vnet | Set-AzVirtualNetwork

            Remove-AzImageBuilderTemplate -Name '${{ variables.imageTemplateName }}' -ResourceGroupName 'sbs-uks-${{ variables.environment }}-cmnsvc-gallery-rg'
        env:
          RETIRE_AZURERM_POWERSHELL_MODULE: false 

  - template: stages/bicep_deploy.yml@PipelineTemplates
    parameters:
      agentPool: $(agentPool)
      stageName: Deploy
      dependsOn: Clean
      deploymentMode: incremental
      deploymentName: Image_$(Get-Date -Format yyyyMMddhhmmss)
      serviceConnection: $(serviceConnection)
      subId: $(subscriptionId)
      deployType: create
      environmentName: ${{ variables.environment }}
      location: uksouth
      fileToRun: $(fileToRun)
      deployJobName: Deploy
      paramsFile: 'images/placeholder.json'
      additionalParams: version=$(version) environment=$(environment) name=${{ parameters.image }}

  - stage: BuildImage
    dependsOn: Deploy
    pool: $(agentPool)
    displayName: 'Build Image'
    jobs:
      - job: BuildImage
        timeoutInMinutes: 120
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(serviceConnection)
              scriptType: "ps"
              scriptLocation: "inlineScript"
              failOnStandardError: true
              inlineScript: |
                Write-Host ${{ variables.imageTemplateName }}
                az image builder run --name ${{ variables.imageTemplateName }} --resource-group 'sbs-uks-${{ variables.environment }}-cmnsvc-gallery-rg' --no-wait

                az image builder wait --name ${{ variables.imageTemplateName }} --resource-group 'sbs-uks-${{ variables.environment }}-cmnsvc-gallery-rg'
                    --custom "lastRunStatus.runState!='Running'"
                
                if (($lastRunStatus = az image builder show -n ${{ variables.imageTemplateName }} --resource-group 'sbs-uks-${{ variables.environment }}-cmnsvc-gallery-rg' --query "lastRunStatus.runState") -eq "Failed")
                {
                  exit 1
                }

                az image builder show --name ${{ variables.imageTemplateName }} --resource-group 'sbs-uks-${{ variables.environment }}-cmnsvc-gallery-rg'